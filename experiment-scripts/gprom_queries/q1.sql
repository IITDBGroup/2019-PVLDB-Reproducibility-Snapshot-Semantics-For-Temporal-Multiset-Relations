WITH _temp_view_3 AS (
SELECT /*+ materialize */ sum(F0."l_quantity") AS "AGGR_0", sum(F0."l_extendedprice") AS "AGGR_1", sum((F0."l_extendedprice" * (1 - F0."l_discount"))) AS "AGGR_2", sum(((F0."l_extendedprice" * (1 - F0."l_discount")) * (1 + F0."l_tax"))) AS "AGGR_3", sum(F0."l_quantity") AS "AGGR_4_avg_sum", count(1) AS "AGGR_4_avg_cnt", sum(F0."l_extendedprice") AS "AGGR_5_avg_sum", count(1) AS "AGGR_5_avg_cnt", sum(F0."l_discount") AS "AGGR_6_avg_sum", count(1) AS "AGGR_6_avg_cnt", count(1) AS "AGGR_7", count(1) AS "open_inter_c_", F0."l_returnflag" AS "GROUP_0", F0."l_linestatus" AS "GROUP_1", F0."t_b" AS "t_b", F0."t_e" AS "t_e"
FROM (
SELECT F0."l_orderkey" AS "l_orderkey", F0."l_partkey" AS "l_partkey", F0."l_suppkey" AS "l_suppkey", F0."l_linenumber" AS "l_linenumber", F0."l_quantity" AS "l_quantity", F0."l_extendedprice" AS "l_extendedprice", F0."l_discount" AS "l_discount", F0."l_tax" AS "l_tax", F0."l_returnflag" AS "l_returnflag", F0."l_linestatus" AS "l_linestatus", F0."l_shipdate" AS "l_shipdate", F0."l_commitdate" AS "l_commitdate", F0."l_receiptdate" AS "l_receiptdate", F0."l_shipinstruct" AS "l_shipinstruct", F0."l_shipmode" AS "l_shipmode", F0."l_comment" AS "l_comment", F0."active_time_begin" AS "t_b", F0."active_time_end" AS "t_e"
FROM "time_lineitem" AS F0) F0
WHERE (F0."l_shipdate" <= to_date('1998-12-01', 'YYYY-MM-DD'))
GROUP BY F0."l_returnflag", F0."l_linestatus", F0."t_b", F0."t_e"),
_temp_view_2 AS (
SELECT /*+ materialize */ F0."AGGR_0" AS "AGGR_0", F0."AGGR_1" AS "AGGR_1", F0."AGGR_2" AS "AGGR_2", F0."AGGR_3" AS "AGGR_3", F0."AGGR_4" AS "AGGR_4", F0."AGGR_5" AS "AGGR_5", F0."AGGR_6" AS "AGGR_6", (F0."AGGR_7")::int8 AS "AGGR_7", F0."GROUP_0" AS "GROUP_0", F0."GROUP_1" AS "GROUP_1", F0."t_b" AS "t_b", F0."t_e" AS "t_e"
FROM (
SELECT (CASE  WHEN ((F0."W_ADD__open_inter_c_" - F0."W_DEC__open_inter_c_") = 0) THEN (NULL)::float8 ELSE (F0."W_ADD__AGGR_0" - F0."W_DEC__AGGR_0") END) AS "AGGR_0", (CASE  WHEN ((F0."W_ADD__open_inter_c_" - F0."W_DEC__open_inter_c_") = 0) THEN (NULL)::float8 ELSE (F0."W_ADD__AGGR_1" - F0."W_DEC__AGGR_1") END) AS "AGGR_1", (CASE  WHEN ((F0."W_ADD__open_inter_c_" - F0."W_DEC__open_inter_c_") = 0) THEN (NULL)::float8 ELSE (F0."W_ADD__AGGR_2" - F0."W_DEC__AGGR_2") END) AS "AGGR_2", (CASE  WHEN ((F0."W_ADD__open_inter_c_" - F0."W_DEC__open_inter_c_") = 0) THEN (NULL)::float8 ELSE (F0."W_ADD__AGGR_3" - F0."W_DEC__AGGR_3") END) AS "AGGR_3", (CASE  WHEN ((F0."W_ADD__AGGR_4_avg_cnt" - F0."W_DEC__AGGR_4_avg_cnt") = 0) THEN (NULL)::float8 ELSE ((F0."W_ADD__AGGR_4_avg_sum" - F0."W_DEC__AGGR_4_avg_sum") / (F0."W_ADD__AGGR_4_avg_cnt" - F0."W_DEC__AGGR_4_avg_cnt")) END) AS "AGGR_4", (CASE  WHEN ((F0."W_ADD__AGGR_5_avg_cnt" - F0."W_DEC__AGGR_5_avg_cnt") = 0) THEN (NULL)::float8 ELSE ((F0."W_ADD__AGGR_5_avg_sum" - F0."W_DEC__AGGR_5_avg_sum") / (F0."W_ADD__AGGR_5_avg_cnt" - F0."W_DEC__AGGR_5_avg_cnt")) END) AS "AGGR_5", (CASE  WHEN ((F0."W_ADD__AGGR_6_avg_cnt" - F0."W_DEC__AGGR_6_avg_cnt") = 0) THEN (NULL)::float8 ELSE ((F0."W_ADD__AGGR_6_avg_sum" - F0."W_DEC__AGGR_6_avg_sum") / (F0."W_ADD__AGGR_6_avg_cnt" - F0."W_DEC__AGGR_6_avg_cnt")) END) AS "AGGR_6", (F0."W_ADD__AGGR_5_avg_cnt" - F0."W_DEC__AGGR_5_avg_cnt") AS "AGGR_7", (F0."W_ADD__AGGR_6_avg_sum" - F0."W_DEC__AGGR_6_avg_sum") AS "open_inter_c_", F0."GROUP_0" AS "GROUP_0", F0."GROUP_1" AS "GROUP_1", F0."ts" AS "t_b", last_value(F0."ts") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" ROWS BETWEEN (1) FOLLOWING AND (1) FOLLOWING) AS "t_e"
FROM (
SELECT "ADD__AGGR_0" AS "ADD__AGGR_0", "ADD__AGGR_1" AS "ADD__AGGR_1", "ADD__AGGR_2" AS "ADD__AGGR_2", "ADD__AGGR_3" AS "ADD__AGGR_3", "ADD__AGGR_4_avg_sum" AS "ADD__AGGR_4_avg_sum", "ADD__AGGR_4_avg_cnt" AS "ADD__AGGR_4_avg_cnt", "ADD__AGGR_5_avg_sum" AS "ADD__AGGR_5_avg_sum", "ADD__AGGR_5_avg_cnt" AS "ADD__AGGR_5_avg_cnt", "ADD__AGGR_6_avg_sum" AS "ADD__AGGR_6_avg_sum", "ADD__AGGR_6_avg_cnt" AS "ADD__AGGR_6_avg_cnt", "ADD__AGGR_7" AS "ADD__AGGR_7", "ADD__open_inter_c_" AS "ADD__open_inter_c_", "DEC__AGGR_0" AS "DEC__AGGR_0", "DEC__AGGR_1" AS "DEC__AGGR_1", "DEC__AGGR_2" AS "DEC__AGGR_2", "DEC__AGGR_3" AS "DEC__AGGR_3", "DEC__AGGR_4_avg_sum" AS "DEC__AGGR_4_avg_sum", "DEC__AGGR_4_avg_cnt" AS "DEC__AGGR_4_avg_cnt", "DEC__AGGR_5_avg_sum" AS "DEC__AGGR_5_avg_sum", "DEC__AGGR_5_avg_cnt" AS "DEC__AGGR_5_avg_cnt", "DEC__AGGR_6_avg_sum" AS "DEC__AGGR_6_avg_sum", "DEC__AGGR_6_avg_cnt" AS "DEC__AGGR_6_avg_cnt", "DEC__AGGR_7" AS "DEC__AGGR_7", "DEC__open_inter_c_" AS "DEC__open_inter_c_", "GROUP_0" AS "GROUP_0", "GROUP_1" AS "GROUP_1", "ts" AS "ts", sum(F0."ADD__AGGR_0") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_ADD__AGGR_0", sum(F0."ADD__AGGR_1") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_ADD__AGGR_1", sum(F0."ADD__AGGR_2") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_ADD__AGGR_2", sum(F0."ADD__AGGR_3") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_ADD__AGGR_3", sum(F0."ADD__AGGR_4_avg_sum") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_ADD__AGGR_4_avg_sum", sum(F0."ADD__AGGR_4_avg_cnt") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_ADD__AGGR_4_avg_cnt", sum(F0."ADD__AGGR_5_avg_sum") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_ADD__AGGR_5_avg_sum", sum(F0."ADD__AGGR_5_avg_cnt") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_ADD__AGGR_5_avg_cnt", sum(F0."ADD__AGGR_6_avg_sum") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_ADD__AGGR_6_avg_sum", sum(F0."ADD__AGGR_6_avg_cnt") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_ADD__AGGR_6_avg_cnt", sum(F0."ADD__AGGR_7") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_ADD__AGGR_7", sum(F0."ADD__open_inter_c_") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_ADD__open_inter_c_", sum(F0."DEC__AGGR_0") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_DEC__AGGR_0", sum(F0."DEC__AGGR_1") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_DEC__AGGR_1", sum(F0."DEC__AGGR_2") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_DEC__AGGR_2", sum(F0."DEC__AGGR_3") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_DEC__AGGR_3", sum(F0."DEC__AGGR_4_avg_sum") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_DEC__AGGR_4_avg_sum", sum(F0."DEC__AGGR_4_avg_cnt") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_DEC__AGGR_4_avg_cnt", sum(F0."DEC__AGGR_5_avg_sum") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_DEC__AGGR_5_avg_sum", sum(F0."DEC__AGGR_5_avg_cnt") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_DEC__AGGR_5_avg_cnt", sum(F0."DEC__AGGR_6_avg_sum") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_DEC__AGGR_6_avg_sum", sum(F0."DEC__AGGR_6_avg_cnt") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_DEC__AGGR_6_avg_cnt", sum(F0."DEC__AGGR_7") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_DEC__AGGR_7", sum(F0."DEC__open_inter_c_") OVER (PARTITION BY F0."GROUP_0", F0."GROUP_1" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) AS "W_DEC__open_inter_c_"
FROM (
SELECT sum(F0."ADD__AGGR_0") AS "ADD__AGGR_0", sum(F0."ADD__AGGR_1") AS "ADD__AGGR_1", sum(F0."ADD__AGGR_2") AS "ADD__AGGR_2", sum(F0."ADD__AGGR_3") AS "ADD__AGGR_3", sum(F0."ADD__AGGR_4_avg_sum") AS "ADD__AGGR_4_avg_sum", sum(F0."ADD__AGGR_4_avg_cnt") AS "ADD__AGGR_4_avg_cnt", sum(F0."ADD__AGGR_5_avg_sum") AS "ADD__AGGR_5_avg_sum", sum(F0."ADD__AGGR_5_avg_cnt") AS "ADD__AGGR_5_avg_cnt", sum(F0."ADD__AGGR_6_avg_sum") AS "ADD__AGGR_6_avg_sum", sum(F0."ADD__AGGR_6_avg_cnt") AS "ADD__AGGR_6_avg_cnt", sum(F0."ADD__AGGR_7") AS "ADD__AGGR_7", sum(F0."ADD__open_inter_c_") AS "ADD__open_inter_c_", sum(F0."DEC__AGGR_0") AS "DEC__AGGR_0", sum(F0."DEC__AGGR_1") AS "DEC__AGGR_1", sum(F0."DEC__AGGR_2") AS "DEC__AGGR_2", sum(F0."DEC__AGGR_3") AS "DEC__AGGR_3", sum(F0."DEC__AGGR_4_avg_sum") AS "DEC__AGGR_4_avg_sum", sum(F0."DEC__AGGR_4_avg_cnt") AS "DEC__AGGR_4_avg_cnt", sum(F0."DEC__AGGR_5_avg_sum") AS "DEC__AGGR_5_avg_sum", sum(F0."DEC__AGGR_5_avg_cnt") AS "DEC__AGGR_5_avg_cnt", sum(F0."DEC__AGGR_6_avg_sum") AS "DEC__AGGR_6_avg_sum", sum(F0."DEC__AGGR_6_avg_cnt") AS "DEC__AGGR_6_avg_cnt", sum(F0."DEC__AGGR_7") AS "DEC__AGGR_7", sum(F0."DEC__open_inter_c_") AS "DEC__open_inter_c_", F0."GROUP_0" AS "GROUP_0", F0."GROUP_1" AS "GROUP_1", F0."ts" AS "ts"
FROM (
SELECT F0."AGGR_0" AS "ADD__AGGR_0", F0."AGGR_1" AS "ADD__AGGR_1", F0."AGGR_2" AS "ADD__AGGR_2", F0."AGGR_3" AS "ADD__AGGR_3", F0."AGGR_4_avg_sum" AS "ADD__AGGR_4_avg_sum", F0."AGGR_4_avg_cnt" AS "ADD__AGGR_4_avg_cnt", F0."AGGR_5_avg_sum" AS "ADD__AGGR_5_avg_sum", F0."AGGR_5_avg_cnt" AS "ADD__AGGR_5_avg_cnt", F0."AGGR_6_avg_sum" AS "ADD__AGGR_6_avg_sum", F0."AGGR_6_avg_cnt" AS "ADD__AGGR_6_avg_cnt", F0."AGGR_7" AS "ADD__AGGR_7", F0."open_inter_c_" AS "ADD__open_inter_c_", 0 AS "DEC__AGGR_0", 0 AS "DEC__AGGR_1", 0 AS "DEC__AGGR_2", 0 AS "DEC__AGGR_3", 0 AS "DEC__AGGR_4_avg_sum", 0 AS "DEC__AGGR_4_avg_cnt", 0 AS "DEC__AGGR_5_avg_sum", 0 AS "DEC__AGGR_5_avg_cnt", 0 AS "DEC__AGGR_6_avg_sum", 0 AS "DEC__AGGR_6_avg_cnt", 0 AS "DEC__AGGR_7", 0 AS "DEC__open_inter_c_", F0."GROUP_0" AS "GROUP_0", F0."GROUP_1" AS "GROUP_1", F0."t_b" AS "ts"
FROM (SELECT * FROM _temp_view_3) F0 UNION ALL 
SELECT 0 AS "ADD__AGGR_0", 0 AS "ADD__AGGR_1", 0 AS "ADD__AGGR_2", 0 AS "ADD__AGGR_3", 0 AS "ADD__AGGR_4_avg_sum", 0 AS "ADD__AGGR_4_avg_cnt", 0 AS "ADD__AGGR_5_avg_sum", 0 AS "ADD__AGGR_5_avg_cnt", 0 AS "ADD__AGGR_6_avg_sum", 0 AS "ADD__AGGR_6_avg_cnt", 0 AS "ADD__AGGR_7", 0 AS "ADD__open_inter_c_", F0."AGGR_0" AS "DEC__AGGR_0", F0."AGGR_1" AS "DEC__AGGR_1", F0."AGGR_2" AS "DEC__AGGR_2", F0."AGGR_3" AS "DEC__AGGR_3", F0."AGGR_4_avg_sum" AS "DEC__AGGR_4_avg_sum", F0."AGGR_4_avg_cnt" AS "DEC__AGGR_4_avg_cnt", F0."AGGR_5_avg_sum" AS "DEC__AGGR_5_avg_sum", F0."AGGR_5_avg_cnt" AS "DEC__AGGR_5_avg_cnt", F0."AGGR_6_avg_sum" AS "DEC__AGGR_6_avg_sum", F0."AGGR_6_avg_cnt" AS "DEC__AGGR_6_avg_cnt", F0."AGGR_7" AS "DEC__AGGR_7", F0."open_inter_c_" AS "DEC__open_inter_c_", F0."GROUP_0" AS "GROUP_0", F0."GROUP_1" AS "GROUP_1", F0."t_e" AS "ts"
FROM (SELECT * FROM _temp_view_3) F0) F0
GROUP BY F0."GROUP_0", F0."GROUP_1", F0."ts") F0) F0) F0
WHERE ((NOT (((F0."t_e") IS NULL))) AND (F0."open_inter_c_" > 0))),
_temp_view_1 AS (
SELECT /*+ materialize */ F0."GROUP_0" AS "l_returnflag", F0."GROUP_1" AS "l_linestatus", F0."AGGR_0" AS "sum_qty", F0."AGGR_1" AS "sum_base_price", F0."AGGR_2" AS "sum_disc_price", F0."AGGR_3" AS "sum_charge", F0."AGGR_4" AS "avg_qty", F0."AGGR_5" AS "avg_price", F0."AGGR_6" AS "avg_disc", F0."AGGR_7" AS "count_order", F0."t_b" AS "t_b", F0."t_e" AS "t_e"
FROM (SELECT * FROM _temp_view_2) F0),
_temp_view_0 AS (
SELECT /*+ materialize */ F0."l_returnflag" AS "l_returnflag", F0."l_linestatus" AS "l_linestatus", F0."sum_qty" AS "sum_qty", F0."sum_base_price" AS "sum_base_price", F0."sum_disc_price" AS "sum_disc_price", F0."sum_charge" AS "sum_charge", F0."avg_qty" AS "avg_qty", F0."avg_price" AS "avg_price", F0."avg_disc" AS "avg_disc", F0."count_order" AS "count_order", F0.DIFFPREVIOUS AS DIFFPREVIOUS, F0."numopen" AS "numopen", F0."t_b" AS "t_b", F0."t_e" AS "t_e"
FROM (
SELECT "l_returnflag" AS "l_returnflag", "l_linestatus" AS "l_linestatus", "sum_qty" AS "sum_qty", "sum_base_price" AS "sum_base_price", "sum_disc_price" AS "sum_disc_price", "sum_charge" AS "sum_charge", "avg_qty" AS "avg_qty", "avg_price" AS "avg_price", "avg_disc" AS "avg_disc", "count_order" AS "count_order", DIFFPREVIOUS AS DIFFPREVIOUS, "numopen" AS "numopen", "ts" AS "t_b", last_value(F0."ts") OVER (PARTITION BY F0."l_returnflag", F0."l_linestatus", F0."sum_qty", F0."sum_base_price", F0."sum_disc_price", F0."sum_charge", F0."avg_qty", F0."avg_price", F0."avg_disc", F0."count_order" ORDER BY F0."ts" ROWS BETWEEN (1) FOLLOWING AND (1) FOLLOWING) AS "t_e"
FROM (
SELECT "l_returnflag" AS "l_returnflag", "l_linestatus" AS "l_linestatus", "sum_qty" AS "sum_qty", "sum_base_price" AS "sum_base_price", "sum_disc_price" AS "sum_disc_price", "sum_charge" AS "sum_charge", "avg_qty" AS "avg_qty", "avg_price" AS "avg_price", "avg_disc" AS "avg_disc", "count_order" AS "count_order", COALESCE(("numopen" - lag(F0."numopen") OVER (PARTITION BY F0."l_returnflag", F0."l_linestatus", F0."sum_qty", F0."sum_base_price", F0."sum_disc_price", F0."sum_charge", F0."avg_qty", F0."avg_price", F0."avg_disc", F0."count_order" ORDER BY F0."ts")), -2000000000) AS DIFFPREVIOUS, "numopen" AS "numopen", "ts" AS "ts"
FROM (
SELECT  DISTINCT "l_returnflag" AS "l_returnflag", "l_linestatus" AS "l_linestatus", "sum_qty" AS "sum_qty", "sum_base_price" AS "sum_base_price", "sum_disc_price" AS "sum_disc_price", "sum_charge" AS "sum_charge", "avg_qty" AS "avg_qty", "avg_price" AS "avg_price", "avg_disc" AS "avg_disc", "count_order" AS "count_order", (sum(F0."t_b") OVER (PARTITION BY F0."l_returnflag", F0."l_linestatus", F0."sum_qty", F0."sum_base_price", F0."sum_disc_price", F0."sum_charge", F0."avg_qty", F0."avg_price", F0."avg_disc", F0."count_order" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING) - sum(F0."t_e") OVER (PARTITION BY F0."l_returnflag", F0."l_linestatus", F0."sum_qty", F0."sum_base_price", F0."sum_disc_price", F0."sum_charge", F0."avg_qty", F0."avg_price", F0."avg_disc", F0."count_order" ORDER BY F0."ts" RANGE UNBOUNDED PRECEDING)) AS "numopen", "ts" AS "ts"
FROM (
SELECT F0."l_returnflag" AS "l_returnflag", F0."l_linestatus" AS "l_linestatus", F0."sum_qty" AS "sum_qty", F0."sum_base_price" AS "sum_base_price", F0."sum_disc_price" AS "sum_disc_price", F0."sum_charge" AS "sum_charge", F0."avg_qty" AS "avg_qty", F0."avg_price" AS "avg_price", F0."avg_disc" AS "avg_disc", F0."count_order" AS "count_order", 0 AS "t_b", 1 AS "t_e", F0."t_e" AS "ts"
FROM (SELECT * FROM _temp_view_1) F0 UNION ALL 
SELECT F0."l_returnflag" AS "l_returnflag", F0."l_linestatus" AS "l_linestatus", F0."sum_qty" AS "sum_qty", F0."sum_base_price" AS "sum_base_price", F0."sum_disc_price" AS "sum_disc_price", F0."sum_charge" AS "sum_charge", F0."avg_qty" AS "avg_qty", F0."avg_price" AS "avg_price", F0."avg_disc" AS "avg_disc", F0."count_order" AS "count_order", 1 AS "t_b", 0 AS "t_e", F0."t_b" AS "ts"
FROM (SELECT * FROM _temp_view_1) F0) F0) F0) F0
WHERE (F0.DIFFPREVIOUS != 0)) F0
WHERE (NOT (((F0."t_e") IS NULL))))
SELECT F0."l_returnflag" AS "l_returnflag", F0."l_linestatus" AS "l_linestatus", F0."sum_qty" AS "sum_qty", F0."sum_base_price" AS "sum_base_price", F0."sum_disc_price" AS "sum_disc_price", F0."sum_charge" AS "sum_charge", F0."avg_qty" AS "avg_qty", F0."avg_price" AS "avg_price", F0."avg_disc" AS "avg_disc", F0."count_order" AS "count_order", F0."t_b" AS "t_b", F0."t_e" AS "t_e"
FROM ((SELECT * FROM _temp_view_0) F0 JOIN generate_series(1,(SELECT MAX(NUMOPEN) FROM (SELECT * FROM _temp_view_0) F0)) F1(n) ON ((F0."numopen" >= F1.N)));


